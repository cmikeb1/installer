---
# *** Main configuration file for the SMART-on-FHIR Installer ***

# To customize the SMART-on-FHIR stack, you can either edit the settings directly in
# this file or set up custom settings overrides (such as custom_settings.yml)

services_host: "localhost"

# The user account that will host the servers. If a user account of this name
# already exists on the system, the installer will not alter its credentials or
# authentication mechanism. If you need to set up actual password authentication,
# userpass needs to be a valid SHA-512 hash.
hosting_username: "fhir"
hosting_userpass: "nopass"
hosting_user_home: "/home/{{hosting_username}}"
hosting_user_home_projects: "{{hosting_user_home}}/projects"
hosting_user_home_apps: "{{hosting_user_home}}/apps"
hosting_user_home_hspc: "{{hosting_user_home}}/hspc"
m2_repo_folder: "{{hosting_user_home}}/.m2/repository"

#user:
#  environment:
#    config: "{{hosting_user_home}}/.profile"
#
top_level_domain: "org"
second_level_domain: "smarthealthit"
additional_subdomains: ""
domain_name: "{{additional_subdomains}}{{second_level_domain}}.{{top_level_domain}}"

# Suppresses selective task execution (set this to true if you would like to
# force the playbook to always rebuild the servers and reload them)
force_rebuild: true

# By default Ansible will update the local copies of the servers code from
# the source repositories. Set this to "no" if you would rather not have the
# repositories updated on each run.
update_repositories: "yes"

# Settigs for Jetty and Oracle Java. You probably won't have to alter these
# unles you are switching to a different version of Jetty or Java
java_home: "/usr/lib/jvm/java-8-openjdk-amd64/jre"
jetty_download_url: "http://central.maven.org/maven2/org/eclipse/jetty/jetty-runner/9.3.6.v20151106/jetty-runner-9.3.6.v20151106.jar"

# Database configuration
mysql_host: "localhost"
mysql_connect_host: "%"
mysql_endpoint: "{{mysql_host}}:3306"
mysql_root_pass: "password"
mysql_username: "fhir"
mysql_password: "password"
#mysql_privilage: "{{auth_server_database}}.*:ALL/{{sandbox_manager_database}}.*:ALL/*.*:ALL,GRANT"
mysql_privilage: "*.*:ALL,GRANT"
mysql_bind_address: "0.0.0.0"

# Password for the Java keystore used by the authorization server (please change)
keystore_password: "changeme"

# When set to true, https is used
use_secure_http: false

# When setting up SSL security for the various services, these settings will allow you to
# specify your own certificates instead of using self-signed certificates.
# See files/sample-certificates for the names of the certificate files expected by the script
use_custom_ssl_certificates: false
#custom_ssl_certificates_path: examples/certificates

certificate_crt_filename: "self-signed-certificate.crt"
certificate_key_filename: "self-signed-certificate.key"

certificate_truststore_alias: "smart"

# Self-signed SSL certificates settings (if generating self-signed certificates)
self_signed_certificate_ssl_country: "US"
self_signed_certificate_ssl_province: "MA"
self_signed_certificate_ssl_locality: "Boston"
self_signed_certificate_ssl_organization: "Example Company"
self_signed_certificate_ssl_division: "support"
self_signed_certificate_ssl_email: "support@{{domain_name}}"

# Controls whether HTTP requests on port 80 will be
# redirected to the server's base URLs
http_redirect: false

# Set this to either "open" or "secured" on the primary endpoint /data
fhir_server_security_mode: "secured"
# Set this to either "true" or "false" to allow an open endpoint at /open
fhir_server_allow_open_access: true

# Artifact Repositories
smart_repo_base: "https://github.com/smart-on-fhir"
hspc_repo_base: "https://bitbucket.org/hspconsortium"

# Apps Repositories
app_server_host: "{{services_host}}"
app_server_port: "9093"

cardiac_risk_project_info:
  repo:
    base_url: "{{smart_repo_base}}"
    name: "cardiac-risk-app"
    tag: "v0.1.1"
  target:
    base_folder: "{{hosting_user_home_apps}}/static/apps"
    name: "cardiac-risk"
    folder: "{{hosting_user_home_apps}}/static/apps/cardiac-risk"

bp_centiles_project_info:
  repo:
    base_url: "{{smart_repo_base}}"
    name: "bp-centiles-app"
    tag: "v0.1.2"
  target:
    base_folder: "{{hosting_user_home_apps}}/static/apps"
    name: "bp-centiles"
    folder: "{{hosting_user_home_apps}}/static/apps/bp-centiles"

growth_chart_project_info:
  repo:
    base_url: "{{smart_repo_base}}"
    name: "growth-chart-app"
    tag: "v0.1.2"
  target:
    base_folder: "{{hosting_user_home_apps}}/static/apps"
    name: "growth-chart"
    folder: "{{hosting_user_home_apps}}/static/apps/growth-chart"

# todo get this from a maven release
patient_picker_project_info:
  repo:
    base_url: "{{hspc_repo_base}}"
    name: "patient-picker"
    tag: "1.0"
  target:
    base_folder: "{{hosting_user_home_hspc}}"
    name: "patient-picker"
    folder: "{{hosting_user_home_hspc}}/patient-picker"

sample_patients_project_info:
  repo:
    base_url: "{{smart_repo_base}}"
    name: "sample-patients"
  target:
    base_folder: "{{hosting_user_home_apps}}/static/apps"
    name: "growth-chart"
    folder: "{{hosting_user_home_apps}}/static/apps/growth-chart"

# choose how many sample patients to load in the server or set to 9999 for all of them
include_custom_patients: false
api_dstu2_sample_patients_generator_params: "--id-prefix SMART"

app_server_base: "{{
    'https' if use_secure_http else 'http'}}://{{app_server_host}}{{
    (':'+app_server_port|string) if app_server_port|int not in (80,443) else ''}}"

# Additional parameters for the sample patient generator
sample_patients_generator_params: ""

# ApacheDS server configuration
apacheds_server_host: "{{services_host}}"
apacheds_server_port: "10389"
apacheds_server_base: "dc={{second_level_domain}},dc={{top_level_domain}}"
apacheds_server_url: "ldap://{{apacheds_server_host}}:{{apacheds_server_port}}"
apacheds_server_system_admin: "admin"
apacheds_server_system_admin_dn: "uid={{apacheds_server_system_admin}},ou=system"
# note, this does not change the password in the apache_ds system
# the apacheds admin password is already set in the apacheds-2.0.0-M23-configured.tar
# if you would like a different password, change it in ApacheDS after deploy
# then change it here for other services to use
apacheds_server_system_admin_initial_password: "secret"
# if you are changing the ldap password after install, set this to the future password
# so the services can be configured to use it correctly
apacheds_server_system_admin_password: "secret"
# test user
apacheds_server_sandbox_test_cn: "cn=test"
apacheds_server_sandbox_test_dn: "{{apacheds_server_sandbox_test_cn}},{{apacheds_server_sandbox_users_context}}"
# users account
apacheds_server_sandbox_users_ou: "ou=users"
apacheds_server_sandbox_users_context: "{{apacheds_server_sandbox_users_ou}},{{apacheds_server_base}}"
# admin account
apacheds_server_sandbox_admin: "admin"
apacheds_server_sandbox_admins_ou: "ou=admins"
apacheds_server_sandbox_admins_context: "{{apacheds_server_sandbox_admins_ou}},{{apacheds_server_base}}"
apacheds_server_sandbox_admin_cn: "cn={{apacheds_server_sandbox_admin}}"
apacheds_server_sandbox_admin_dn: "{{apacheds_server_sandbox_admin_cn}},{{apacheds_server_sandbox_admins_context}}"
apacheds_server_sandbox_admin_password: "password"
# demo account
apacheds_server_sandbox_demo: "demo"
apacheds_server_sandbox_demo_cn: "cn={{apacheds_server_sandbox_demo}}"
apacheds_server_sandbox_demo_dn: "{{apacheds_server_sandbox_demo_cn}},{{apacheds_server_sandbox_admins_context}}"
apacheds_server_sandbox_demo_password: "demo"

# API Server client
api_server_oauth2_clientId: "hspc_resource_server"
api_server_oauth2_clientSecret: "secret"

# API Server schema
api_dstu2_schema_version: 4

# API DSTU2 Server
api_dstu2_server_host: "{{services_host}}"
api_dstu2_server_port: "9071"
api_dstu2_server_context: "/"
api_dstu2_server_name: "Local DSTU2 FHIR dev server"
api_dstu2_server_inferred_protocol: "{{'https' if use_secure_http else 'http'}}"
api_dstu2_server_inferred_port: "{{(':'+api_dstu2_server_port|string) if api_dstu2_server_port|int not in (80,443) else ''}}"
api_dstu2_server_smart_sandbox: "smartdstu2"
api_dstu2_server_base_url: "{{api_dstu2_server_inferred_protocol}}://{{api_dstu2_server_host}}{{api_dstu2_server_inferred_port}}"
api_dstu2_server_context_url: "{{api_dstu2_server_base_url}}{{api_dstu2_server_context}}"
api_dstu2_server_smart_sandbox_url: "{{api_dstu2_server_context_url}}{{api_dstu2_server_smart_sandbox}}"
api_dstu2_server_smart_sandbox_fhir_root_url: "{{api_dstu2_server_smart_sandbox_url}}/data"
api_dstu2_server_smart_sandbox_open_fhir_root_url: "{{api_dstu2_server_smart_sandbox_url}}/open"

# Persona-API DSTU2 Server
persona_api_dstu2_server_host: "{{services_host}}"
persona_api_dstu2_server_port: "9171"
persona_api_dstu2_server_context: "/"
persona_api_dstu2_server_name: "Local Persona DSTU2 FHIR dev server"
persona_api_dstu2_server_inferred_protocol: "{{'https' if use_secure_http else 'http'}}"
persona_api_dstu2_server_inferred_port: "{{(':'+persona_api_dstu2_server_port|string) if persona_api_dstu2_server_port|int not in (80,443) else ''}}"
persona_api_dstu2_server_smart_sandbox: "smartdstu2"
persona_api_dstu2_server_base_url: "{{persona_api_dstu2_server_inferred_protocol}}://{{persona_api_dstu2_server_host}}{{persona_api_dstu2_server_inferred_port}}"
persona_api_dstu2_server_context_url: "{{persona_api_dstu2_server_base_url}}{{persona_api_dstu2_server_context}}"
persona_api_dstu2_server_smart_sandbox_url: "{{persona_api_dstu2_server_context_url}}{{persona_api_dstu2_server_smart_sandbox}}"
persona_api_dstu2_server_smart_sandbox_fhir_root_url: "{{persona_api_dstu2_server_smart_sandbox_url}}/data"
persona_api_dstu2_server_smart_sandbox_open_fhir_root_url: "{{persona_api_dstu2_server_smart_sandbox_url}}/open"

# Mock-API DSTU2 Server
mock_api_dstu2_server_host: "{{services_host}}"
mock_api_dstu2_server_port: "9271"
mock_api_dstu2_server_context: "/"
mock_api_dstu2_server_name: "Local Mock DSTU2 FHIR dev server"
mock_api_dstu2_server_inferred_protocol: "{{'https' if use_secure_http else 'http'}}"
mock_api_dstu2_server_inferred_port: "{{(':'+mock_api_dstu2_server_port|string) if mock_api_dstu2_server_port|int not in (80,443) else ''}}"
mock_api_dstu2_server_smart_sandbox: "smartdstu2"
mock_api_dstu2_server_base_url: "{{mock_api_dstu2_server_inferred_protocol}}://{{mock_api_dstu2_server_host}}{{mock_api_dstu2_server_inferred_port}}"
mock_api_dstu2_server_context_url: "{{mock_api_dstu2_server_base_url}}{{mock_api_dstu2_server_context}}"
mock_api_dstu2_server_smart_sandbox_url: "{{mock_api_dstu2_server_context_url}}{{mock_api_dstu2_server_smart_sandbox}}"
mock_api_dstu2_server_smart_sandbox_fhir_root_url: "{{mock_api_dstu2_server_smart_sandbox_url}}/data"
mock_api_dstu2_server_smart_sandbox_open_fhir_root_url: "{{mock_api_dstu2_server_smart_sandbox_url}}/open"

# API_STU3 Database
api_stu3_schema_version: 4
api_stu3_server_sandbox: "smartstu3"
api_stu3_server_database: "hspc_{{api_stu3_schema_version}}_{{api_stu3_server_sandbox}}"
api_stu3_baseline_snapshot: initial

# API_STU3 Server
api_stu3_server_host: "{{services_host}}"
api_stu3_server_external_port: "9074"
api_stu3_server_port: "8074"
api_stu3_server_inferred_port: "{{(':'+api_stu3_server_external_port|string) if api_stu3_server_external_port|int not in (80,443) else ''}}"
api_stu3_server_url: "http://{{api_stu3_server_host}}{{api_stu3_server_inferred_port}}"
api_stu3_server_default_sandbox_url: "{{api_stu3_server_url}}/{{api_stu3_server_sandbox}}"
api_stu3_server_default_sandbox_fhir_root_url: "{{api_stu3_server_default_sandbox_url}}/data"
api_stu3_server_initial_memory: 256M
api_stu3_server_max_memory: 512M
api_stu3_server_artifact_group_id: "org.hspconsortium.reference"
api_stu3_server_artifact_artifact_id: "hspc-reference-api-webapp-multitenant"
api_stu3_server_artifact_version: "1.5.2-SNAPSHOT"
api_stu3_server_artifact_packaging: "jar"
api_stu3_server_artifact_location: "{{m2_repo_folder}}/org/hspconsortium/reference/{{api_stu3_server_artifact_artifact_id}}/{{api_stu3_server_artifact_version}}/{{api_stu3_server_artifact_artifact_id}}-{{api_stu3_server_artifact_version}}.{{api_stu3_server_artifact_packaging}}"

# Default API Server
api_default_server_url: "{{api_stu3_server_url}}"
api_default_sandbox_url: "{{api_stu3_server_url}}/{{api_stu3_server_sandbox}}/data"

# MOCK_API_STU3 Server
mock_api_stu3_server_host: "{{services_host}}"
mock_api_stu3_server_port: "8274"
mock_api_stu3_server_security_mode: mock
mock_api_stu3_server_external_port: "9274"
mock_api_stu3_server_inferred_port: "{{(':'+mock_api_stu3_server_external_port|string) if mock_api_stu3_server_external_port|int not in (80,443) else ''}}"
mock_api_stu3_server_url: "http://{{mock_api_stu3_server_host}}{{mock_api_stu3_server_inferred_port}}"
mock_api_stu3_server_default_sandbox_url: "{{mock_api_stu3_server_url}}/{{api_stu3_server_sandbox}}"
mock_api_stu3_server_default_sandbox_fhir_root_url: "{{mock_api_stu3_server_default_sandbox_url}}/data"

# PERSONA_API_STU3 Server
persona_api_stu3_server_host: "{{services_host}}"
persona_api_stu3_server_external_port: "9174"
persona_api_stu3_server_port: "8174"
persona_api_stu3_server_inferred_port: "{{(':'+persona_api_stu3_server_external_port|string) if persona_api_stu3_server_external_port|int not in (80,443) else ''}}"
persona_api_stu3_server_url: "http://{{persona_api_stu3_server_host}}{{persona_api_stu3_server_inferred_port}}"
persona_api_stu3_server_default_sandbox_url: "{{persona_api_stu3_server_url}}/{{api_stu3_server_sandbox}}"
persona_api_stu3_server_default_sandbox_fhir_root_url: "{{persona_api_stu3_server_default_sandbox_url}}/data"

# Messaging Server
messaging_server_host: "{{services_host}}"
messaging_server_port: "9091"
messaging_server_internal_host: "localhost"
messaging_server_internal_port: "8091"
messaging_server_context: "/"
messaging_server_name: "Messaging Server"
messaging_server_inferred_protocol: "{{'https' if use_secure_http else 'http'}}"
messaging_server_inferred_port: "{{(':'+messaging_server_port|string) if messaging_server_port|int not in (80,443) else ''}}"
messaging_server_base_url: "{{messaging_server_inferred_protocol}}://{{messaging_server_host}}{{messaging_server_inferred_port}}"
messaging_server_url: "{{messaging_server_base_url}}{{messaging_server_context}}"

# SandboxManager Server
sandbox_manager_server_host: "{{services_host}}"
sandbox_manager_server_port: "9080"
sandbox_manager_server_internal_host: "localhost"
sandbox_manager_server_internal_port: "8080"
sandbox_manager_server_context: "/"
sandbox_manager_server_name: "Sandbox Manager server"
sandbox_manager_server_inferred_protocol: "{{'https' if use_secure_http else 'http'}}"
sandbox_manager_server_inferred_port: "{{(':'+sandbox_manager_server_port|string) if sandbox_manager_server_port|int not in (80,443) else ''}}"
sandbox_manager_server_base_url: "{{sandbox_manager_server_inferred_protocol}}://{{sandbox_manager_server_host}}{{sandbox_manager_server_inferred_port}}"
sandbox_manager_server_url: "{{sandbox_manager_server_base_url}}{{sandbox_manager_server_context}}"

# Auth Server
auth_server_host: "{{services_host}}"
auth_server_port: "9060"
auth_server_internal_host: "localhost"
auth_server_internal_port: "8060"
# for local install with /auth and /persona from the same host
# requiring two deployments of the auth server
auth_server_context: "/"
auth_server_name: "Authorization Server"
auth_server_inferred_protocol: "{{'https' if use_secure_http else 'http'}}"
auth_server_inferred_port: "{{(':'+auth_server_port|string) if auth_server_port|int not in (80,443) else ''}}"
auth_server_base_url: "{{auth_server_inferred_protocol}}://{{auth_server_host}}{{auth_server_inferred_port}}"
auth_server_url: "{{auth_server_base_url}}{{auth_server_context}}"
auth_server_client: "client"
auth_server_password: "secret"
auth_server_enable_mock_endpoints: true

# Persona-Auth Server
persona_auth_server_host: "{{services_host}}"
persona_auth_server_port: "9161"
persona_auth_server_internal_host: "localhost"
persona_auth_server_internal_port: "8160"
persona_auth_server_context: "/"
persona_auth_server_name: "Persona Authorization Server"
persona_auth_server_inferred_protocol: "{{'https' if use_secure_http else 'http'}}"
persona_auth_server_inferred_port: "{{(':'+persona_auth_server_port|string) if persona_auth_server_port|int not in (80,443) else ''}}"
persona_auth_server_base_url: "{{persona_auth_server_inferred_protocol}}://{{persona_auth_server_host}}{{persona_auth_server_inferred_port}}"
persona_auth_server_url: "{{persona_auth_server_base_url}}{{persona_auth_server_context}}"
persona_auth_server_enable_mock_endpoints: false

# PWM Server
pwm_server_host: "{{services_host}}"
#pwm_server_host: "service.smarthealthit.org"
pwm_server_port: "9092"
pwm_server_internal_host: "localhost"
pwm_server_internal_port: "8092"
pwm_server_context: "/"
pwm_server_name: "PWM Server"
pwm_server_inferred_protocol: "{{'https' if use_secure_http else 'http'}}"
#pwm_server_inferred_protocol: "https"
pwm_server_inferred_port: "{{(':'+pwm_server_port|string) if pwm_server_port|int not in (80,443) else ''}}"
#pwm_server_inferred_port: ""
pwm_server_base_url: "{{pwm_server_inferred_protocol}}://{{pwm_server_host}}{{pwm_server_inferred_port}}"
pwm_server_url: "{{pwm_server_base_url}}{{pwm_server_context}}"

nginx_home: "/etc/nginx"
fhir_home: "/home/fhir"
installer_user: "vagrant"
installer_user_home: "/home/{{installer_user}}"
installer_home: "{{installer_user_home}}/installer"

# Setting this to true will enable PWM
enable_pwm: false

# Setting this to true will enable nightly reset
enable_nightly_reset: false

user_scripts_home: "{{hosting_user_home}}/scripts"
user_jobs_home: "{{hosting_user_home}}/jobs"
user_jobs_output_home: "{{user_jobs_home}}/output"

enable_aws_snapshot: false
aws_output_format: 'json'
aws_region: "changeme"
aws_access_key_id: "changeme"
aws_secret_access_key: "changeme"
aws_ec2_volume_id: "changeme"

# Maximu size of sample patient data files
max_upload_size: "5M"

# Email server account
email_account_description: "SMART Account Services"
email_smtp_address: "smtp.example.com"
email_smtp_port: "587"
email_smtp_username: "changeme"
email_smtp_password: "changeme"
email_smtp_password_encrypted: "changeme"
email_admin_address: "changeme@example.com"
email_contact_addresss: "support@example.org"