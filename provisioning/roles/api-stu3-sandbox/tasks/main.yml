---
- name: drop sandbox snapshot
  include: snapshot-command.yml
  tags: [api-stu3-all, api-stu3-sandbox, smart-production]
  vars:
    snapshot_name: "{{api_stu3_baseline_snapshot}}"
    snapshot_action: Delete

- name: initialize sandbox
  tags: [api-stu3-all, api-stu3-sandbox, smart-platform]
  uri:
    url: "{{api_stu3_server_internal_smart_sandbox_url}}/sandbox"
    method: PUT
    body: "{ 'teamId': '{{api_stu3_server_smart_sandbox}}','schemaVersion': '{{api_stu3_schema_version}}','allowOpenAccess': true,'baselineDate': '{{ ansible_date_time.year }}-{{ ansible_date_time.month }}-{{ ansible_date_time.day }}' }"
    body_format: json
    HEADER_Content-Type: "application/json"

- name: checkout api-stu3-sample patients
  tags: [api-stu3-all, api-stu3-sandbox, smart-platform]
  become_user: "{{username}}"
  git: repo={{api_stu3_sample_patients_repo}}
       version={{api_stu3_sample_patients_branch}}
       dest={{install_dir}}/api-stu3-sample-patients
       update={{update_repositories}}
       force=yes
       depth=1
  register: api_stu3_sample_patients_checkout

- name: build api-stu3-sample patients
  tags: [api-stu3-all, api-stu3-sandbox, smart-platform]
  become_user: "{{username}}"
  shell: chdir={{install_dir}}/api-stu3-sample-patients/bin
         python generate.py --write-fhir ../generated-data {{api_stu3_sample_patients_generator_params}}

- name: list api-stu3-sample patients
  tags: [api-stu3-all, api-stu3-sandbox, smart-platform]
  shell: ls {{install_dir}}/api-stu3-sample-patients/generated-data/*.xml | head -n {{api_stu3_sample_patients_limit}}
  register: api_stu3_sample_patient_files

- name: load api-stu3-sample patients
  tags: [api-stu3-all, api-stu3-sandbox, smart-platform]
  shell: "chdir={{install_dir}}/api-stu3-sample-patients/generated-data/
         curl
           '{{api_stu3_server_internal_smart_sandbox_open_fhir_root_url}}/?'
           -H 'Content-Type: application/xml+fhir'
           --data-binary @{{item}}"
  with_items: "{{api_stu3_sample_patient_files.stdout_lines}}"

- name: list custom patients (json)
  tags: [api-stu3-all, api-stu3-sandbox, smart-platform]
  shell: ls {{install_dir}}/api-stu3-sample-patients/custom-data/*.json
  register: api_stu3_custom_patient_files_json

- name: load custom patients (json)
  tags: [api-stu3-all, api-stu3-sandbox, smart-platform]
  shell: "chdir={{install_dir}}/api-stu3-sample-patients/custom-data/
         curl
           '{{api_stu3_server_internal_smart_sandbox_open_fhir_root_url}}/?'
           -H 'Content-Type: application/json+fhir'
           --data-binary @{{item}}"
  with_items: "{{api_stu3_custom_patient_files_json.stdout_lines}}"

- include: snapshot-command.yml
  tags: [api-stu3-all, api-stu3-sandbox, smart-production]
  vars:
    snapshot_name: "{{api_stu3_baseline_snapshot}}"
    snapshot_action: Take

# custom-sample-data is loaded nightly after the snapshot is restored
# checkout the project but don't build it
- name: checkout api-stu3-custom-sample-data
  tags: [api-stu3-all, api-stu3-sandbox, smart-platform]
  become_user: "{{username}}"
  git: repo={{api_stu3_custom_sample_data_repo}}
       version={{api_stu3_custom_sample_data_branch}}
       dest={{install_dir}}/api-stu3-custom-sample-data
       update={{update_repositories}}
       force=yes
       depth=1

- name: prepare scripts folder
  tags: [api-stu3-all, api-stu3-sandbox, smart-platform]
  become_user: "{{username}}"
  file: path="{{user_scripts_home}}" state=directory

- name: create script process-stu3-custom-sample-data.sh
  tags: [api-stu3-all, api-stu3-sandbox, api-stu3-cron, smart-platform]
  become_user: "{{username}}"
  template: src=process-stu3-custom-sample-data.sh.j2
            dest={{user_scripts_home}}/process-stu3-custom-sample-data.sh
            mode=0755

- name: run the process-stu3-custom-sample-data.sh script
  tags: [api-stu3-all, api-stu3-sandbox, smart-platform]
  become_user: "{{username}}"
  shell: "{{user_scripts_home}}/process-stu3-custom-sample-data.sh ."

- name: create script restore-stu3-baseline-snapshot.sh
  tags: [api-stu3-all, api-stu3-sandbox, api-stu3-cron, smart-production]
  become_user: "{{username}}"
  template: src=restore-stu3-baseline-snapshot.sh.j2
            dest={{user_scripts_home}}/restore-stu3-baseline-snapshot.sh
            mode=0755

- name: create script reset-stu3-database-job.sh
  tags: [api-stu3-all, api-stu3-sandbox, api-stu3-cron, smart-production]
  become_user: "{{username}}"
  template: src=reset-stu3-database-job.sh.j2
            dest={{user_scripts_home}}/reset-stu3-database-job.sh
            mode=0755

# create a cron job for nightly reset to be run at 5 AM UTC, or midnight US-EST
- name: create cron job to nightly reset the api database
  tags: [api-stu3-all, api-stu3-sandbox, api-stu3-cron, smart-production]
  become_user: "{{username}}"
  cron:
    name: "reset api-stu3 database"
    minute: "0"
    hour: "5"
    job: "{{user_scripts_home}}/reset-stu3-database-job.sh >> {{user_jobs_output_home}}/nightly-reset.log"

- meta: flush_handlers